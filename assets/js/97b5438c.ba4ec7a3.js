"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3112],{1333:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>h});var i=n(4848),s=n(8453);const o={id:"countinggamefeature",title:"Counting Game Feature",slug:"/counting-game-feature"},a=void 0,r={id:"countinggamefeature",title:"Counting Game Feature",description:"How does this work?",source:"@site/docs/countinggamefeature.md",sourceDirName:".",slug:"/counting-game-feature",permalink:"/docs/counting-game-feature",draft:!1,unlisted:!1,editUrl:"https://github.com/ThatGuyJacobee/Elite-Bot-Docs/edit/main/docs/countinggamefeature.md",tags:[],version:"current",frontMatter:{id:"countinggamefeature",title:"Counting Game Feature",slug:"/counting-game-feature"},sidebar:"someSidebar",previous:{title:"Custom Embed Feature",permalink:"/docs/custom-embed-feature"},next:{title:"Configuration Commands \u2699\ufe0f",permalink:"/docs/configuration-commands"}},c={},h=[{value:"How does this work?",id:"how-does-this-work",level:2},{value:"Playing the game",id:"playing-the-game",level:2}];function u(e){const t={admonition:"admonition",h2:"h2",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"how-does-this-work",children:"How does this work?"}),"\n",(0,i.jsx)(t.p,{children:"The counting game is a game where you count... as funny as it sounds \ud83d\ude00. In essence, you first setup the game by setting the channel and a few configuration options including the choice to count up in integers or binary (for a challenge \ud83d\ude0e). After it is setup, any user can now count up within the channel to reach milestones, without making a mistake or the same user counting twice in a row if you choose to set it as that. The ultimate aim of the game, is to simply for the community to count as high as they can, with a cross-guild leaderboard coming soon\u2122\ufe0f to compete for the highest place!"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Command"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Example"}),(0,i.jsx)(t.th,{children:"Usage"}),(0,i.jsx)(t.th,{children:"Permission"}),(0,i.jsx)(t.th,{children:"Timeout"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/countgame config"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"/countgame config [#channel] [gamemode] [resetwrong] [sameuser]"}),(0,i.jsx)(t.td,{children:"Change multiple configuration settings for the join roles feature using this command!"}),(0,i.jsx)(t.td,{children:"Manage Events"}),(0,i.jsx)(t.td,{children:"30 secs"})]})})]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"Here are the configuration options explained in depth:\n-> Gamemode: You can pick for users to count in either integer (1..2..3..etc) or in binary for a challenge (1..01..11..etc).\n-> Resetwrong: This is set to true/false and configures whether the count should reset to 0 after a wrong answer.\n-> Sameuser: This is also set to true/false and configures whether a same user is allowed to count more than once in a row."})}),"\n",(0,i.jsx)(t.h2,{id:"playing-the-game",children:"Playing the game"}),"\n",(0,i.jsx)(t.p,{children:'Once you configure the game, an embed which shows the configured game "rules" will show up. It may be best to pin this message in-case a user needs to see what the rules are. Afterwards, simply begin counting as easy as that!'}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"Any non-numerical messages are instantly deleted to prevent clutter. Moreover, messages warning users that they wrote the incorrect next number delete after 15 seconds, unless it's a reset message which will remain as it is important to the game."})}),"\n",(0,i.jsx)(t.p,{children:"An example of the game showing all config options in effect:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img",src:n(2887).A+"",width:"1480",height:"1111"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},2887:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/countgame-example-a5e0b22166c13747005788de4edc0503.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);